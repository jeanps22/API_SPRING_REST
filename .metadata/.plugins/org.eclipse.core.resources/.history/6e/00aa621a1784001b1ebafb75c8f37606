package com.algaworks.osworks.api.controller;

import java.util.List;
import java.util.Optional;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import com.algaworks.osworks.domain.model.OrdemServico;
import com.algaworks.osworks.domain.repository.OrdemServicoRepository;
import com.algaworks.osworks.domain.service.OrdemServicoService;

@RestController
@RequestMapping("/ordens-servico")
public class OrdemServicoController {

	@Autowired
	private OrdemServicoService ordemService;

	@Autowired
	OrdemServicoRepository ordemRepository;

	@PostMapping
	@ResponseStatus(HttpStatus.CREATED)
	public OrdemServico criar(@Valid @RequestBody OrdemServico ordem) {
		return ordemService.criar(ordem);
	}

	@GetMapping
	public List<OrdemServico> listar() {
		return ordemRepository.findAll();
	}

	@GetMapping("/{ordemId}")
	public ResponseEntity<OrdemServico> buscar(@PathVariable Long ordemId) {
		Optional<OrdemServico> ordem = ordemRepository.findById(ordemId);

		if (!ordem.isPresent()) {
			return ResponseEntity.notFound().build();
		}

		return ResponseEntity.ok(ordem.get());
	}
	
	@PutMapping("/{ordemId}")
	public ResponseEntity<OrdemServicoe>
}
